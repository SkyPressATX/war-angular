var warApiClient=angular.module("warApiClient",[]);warApiClient.provider("$warClientConfig",function(){var t={};this.configure=function(n){t=n},this.$get=["$warCall",function(n){return{init:function(){n._configure(t)}}}]}),warApiClient.service("$warCall",["$http",function(t){var n=this,r=function(r,e,i){var o={method:r,url:"/"+n._config.api_prefix+e};return n._config.nonce&&(o.headers={"X-WP-Nonce":n._config.nonce}),i&&"GET"===r&&(o.params=i),i&&"GET"!==r&&(o.data=i),t(o).then(function(t){return t.data}).catch(function(t){return{error:t.statusText,data:t.data}})};this.get=function(t,n){return r("GET",t,n)},this.put=function(t,n){return r("PUT",t,n)},this.post=function(t,n){return r("POST",t,n)},this.patch=function(t,n){return r("PATCH",t,n)},this.delete=function(t,n){return r("DELETE",t,n)},this._config={api_prefix:"wp-json",nonce:!1},this._configure=function(t){n._config=_.merge(n._config,t)}}]),warApiClient.service("$warClient",["$warCall",function(t){this.routes={},this.discover=function(n){var r=this;return n||(n=""),!_.isEmpty(r.routes)||t.get("/"+n).then(function(t){if(t.routes)return t.routes;throw new Error("No Routes Found")}).then(function(n){return _.assign(r.routes,_.transform(n,function(n,r,e){if(r.namespace&&r.namespace!==_.trimStart(e,"/")){n[r.namespace]||(n[r.namespace]={});var i={};_.each(r.methods,function(n){n=_.toLower(n),i[n]=_.bind(t[n],i,e)}),n[r.namespace][_.camelCase(_.replace(_.trimStart(e,"/"),r.namespace+"/",""))]=i}},{})),r.routes}).catch(function(t){return console.log(t),{error:t}})},this.name=function(t){if(!_.isString(t))throw new Error("Namespace needs to be a string");if(!this.routes[t])throw new Error(t+" Namespace not found");return this.routes[t]},this.list=function(t){if(_.isEmpty(this.routes))throw new Error("Namespace not found");return _.isString(t)&&t?this.routes[t]:this.routes}}]),warApiClient.run(["$warClientConfig",function(t){t.init()}]);