angular.module("warApiClient",[]).provider("$warClientConfig",function(){var t={};this.configure=function(e){t=e},this.$get=["$warCall",function(e){return{init:function(){e._configure(t)}}}]}).service("$warCall",["$http",function(t){var e=this;this.apiCall=function(n,i,s,a){var r={method:n,url:"/"+e._config.api_prefix+i};return e._config.nonce&&(r.headers={"X-WP-Nonce":e._config.nonce}),a&&(r.url+="/"+a),s&&_.isObject(s)&&"GET"===n&&(r.params=s),s&&_.isObject(s)&&"GET"!==n&&(r.data=s),t(r).then(function(t){return t.data}).catch(function(t){return{error:t.statusText,data:t.data}})},this._config={api_prefix:"wp-json",nonce:!1},this._configure=function(t){e._config=_.merge(e._config,t)}}]).service("$warClient",["$warCall",function(t){this.stashRoutes,this.namespaces,this.routes={},this.discover=function(){var e=this;return!_.isEmpty(e.routes)||(!_.isEmpty(e.namespaces)||t.apiCall("GET","/").then(function(t){return t.routes&&(e.stashRoutes=t.routes),t.namespaces&&(e.namespaces=t.namespaces),!0}).catch(function(t){return console.log(t),{error:t}}))},this.bindRoutes=function(e){var n=this;return e||(e=""),_.assign(n.routes,_.transform(n.stashRoutes,function(n,i,s){if(i.namespace==e&&i.namespace!==_.trimStart(s,"/")){var a=_.replace(s,/\W+P\W[a-z0-9]+\W\Wd\W+/,""),r=_.camelCase(_.replace(_.trimStart(a,"/"),i.namespace+"/",""));n[i.namespace]||(n[i.namespace]={}),_.isEmpty(n[i.namespace][r])&&(n[i.namespace][r]={}),_.each(i.methods,function(e){_.isEmpty(n[i.namespace][r][e])&&(n[i.namespace][r][_.toLower(e)]=_.bind(t.apiCall,n[i.namespace][r],e,a))})}},{})),n.routes},this.name=function(t){if(!_.isString(t))throw new Error("Namespace needs to be a string");if(!_.indexOf(this.namespaces,t)>0)throw new Error(t+" Namespace not found");return _.isEmpty(this.routes[t])&&this.bindRoutes(t),this.routes[t]},this.list=function(t){if(_.isEmpty(this.routes))throw new Error("Namespace not found");return _.isString(t)&&t?this.routes[t]:this.routes}}]).run(["$warClientConfig",function(t){t.init()}]);